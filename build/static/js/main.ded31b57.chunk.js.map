{"version":3,"sources":["utilities/TableHelpers.js","pages/HomePage.js","NavBar.js","components/CountiesSearch.js","components/CountyTable.js","components/CountiesList.js","pages/CountiesPage.js","Auth/Auth.js","pages/Callback.js","components/StatesSearch.js","components/StateTable.js","components/StatesList.js","pages/StatesPage.js","components/AuthContext.js","components/PrivateRoute.js","pages/CountyPage.js","pages/StatePage.js","App.js","serviceWorker.js","index.js"],"names":["TableHelpers","numberFormatter","cell","row","value","displayType","thousandSeparator","decimalScale","percentFormatter","suffix","HomePage","props","useState","regressingStates","setRegressingStates","regressingCounties","setRegressingCounties","improvingCounties","setImprovingCounties","improvingStates","setImprovingStates","rowFormatter","rowIndex","classes","healthScore","stateColumns","dataField","text","hidden","formatter","to","fips","sort","type","TableHelper","countyColumns","concat","useEffect","a","fetch","method","headers","body","JSON","stringify","query","$gt","totalCases","limit","counties","json","$lt","states","fetchData","auth","Container","Row","Col","length","keyField","data","columns","striped","condensed","height","scrollTop","rowClasses","NavigationBar","isAuthenticated","login","logout","getProfile","profile","setProfile","profileError","setProfileError","loadUserProfile","error","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","exact","activeStyle","fontWeight","Text","name","Form","inline","Button","onClick","CountiesSearch","label","onChange","onSearch","defaultOption","selected","defaultSelected","options","labelKey","filterBy","placeholder","renderMenuItemChildren","option","county","state","multiple","CountyTable","style","margin","float","Table","bordered","size","width","caseIncrease","peakCases","peakCasesDate","totalDeaths","deathIncrease","peakDeaths","peakDeathsDate","CountiesList","countiesData","setCountiesData","map","c","result","fluid","xs","md","lg","key","sm","CountiesPage","searchCounties","setSearchCounties","selectedCounties","setSelectedCounties","Authorization","getAccessToken","handleChange","handleSearch","nameQuery","_accessToken","_expiresAt","Auth","history","localStorage","setItem","location","auth0","authorize","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","redirectLocation","getItem","parse","push","alert","console","log","removeItem","expiresIn","Date","getTime","scheduleTokenRenewal","ClientID","process","returnTo","Error","cb","userProfile","client","userInfo","this","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","checkSession","error_description","delay","now","setTimeout","renewToken","Callback","componentDidMount","test","hash","Component","StatesSearch","isLoading","StateTable","StatesList","statesData","setStatesData","s","StatesPage","searchStates","setSearchStates","selectedStates","setSelectedStates","setIsLoading","AuthContext","React","createContext","PrivateRoute","component","scopes","rest","Consumer","render","userHasScopes","join","defaultProps","CountyPage","match","setCounty","countyMetrics","setCountyMetrics","params","metrics","defaultSorted","order","StatePage","setState","stateMetrics","setStateMetrics","App","tokenRenewalComplete","Provider","path","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"8TA6BeA,EAHP,CAAEC,gBAtBe,SAACC,EAAMC,GAC9B,OACC,kBAAC,IAAD,CACCC,MAAOF,EACPG,YAAa,OACbC,mBAAmB,EACnBC,aAAc,KAgBSC,iBAXD,SAACN,EAAMC,GAC/B,OACC,kBAAC,IAAD,CACCC,MAAOF,EACPG,YAAa,OACbC,mBAAmB,EACnBC,aAAc,EACdE,OAAQ,QCiLGC,EA/LE,SAACC,GAAW,IAAD,EACqBC,mBAAS,IAD9B,mBACpBC,EADoB,KACFC,EADE,OAEyBF,mBAAS,IAFlC,mBAEpBG,EAFoB,KAEAC,EAFA,OAGuBJ,mBAAS,IAHhC,mBAGpBK,EAHoB,KAGDC,EAHC,OAImBN,mBAAS,IAJ5B,mBAIpBO,EAJoB,KAIHC,EAJG,KAcrBC,EAAe,SAAClB,EAAKmB,GAC1B,IAAIC,EAAU,KAId,OAHIpB,EAAIqB,YAAc,IAAKD,EAAU,cAC5BpB,EAAIqB,YAAc,GAAKD,EAAU,eACjCpB,EAAIqB,YAAc,KAAKD,EAAU,gBACnCA,GAEFE,EAAe,CACpB,CACCC,UAAW,OACXC,KAAM,OACNC,QAAQ,GAET,CACCF,UAAW,QACXC,KAAM,QACNE,UAxBqB,SAAC3B,EAAMC,GAC7B,OAAO,kBAAC,IAAD,CAAM2B,GAAE,iBAAY3B,EAAI4B,OAAS7B,IAwBvC8B,MAAM,GAEP,CACCN,UAAW,cACXC,KAAM,cACNM,KAAM,SACNJ,UAAWK,EAAYjC,gBACvB+B,MAAM,GAEP,CACCN,UAAW,eACXC,KAAM,sBACNM,KAAM,SACNJ,UAAWK,EAAY1B,iBACvBwB,MAAM,GAEP,CACCN,UAAW,gBACXC,KAAM,uBACNM,KAAM,SACNJ,UAAWK,EAAY1B,iBACvBwB,MAAM,GAEP,CACCN,UAAW,gBACXC,KAAM,kBACNM,KAAM,OACND,MAAM,IAIJG,EAAgB,CACnB,CACCT,UAAW,SACXC,KAAM,SACNE,UAxDsB,SAAC3B,EAAMC,GAC9B,OAAO,kBAAC,IAAD,CAAM2B,GAAE,kBAAa3B,EAAI4B,OAAS7B,IAwDxC8B,MAAM,IA8DR,OA1DAG,EAAgBA,EAAcC,OAAOX,GAErCY,qBAAU,YACM,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,gBAAiB,CAC3CC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBC,MAAO,CAAErB,YAAa,CAAEsB,IAAK,IAC7Bd,KAAM,CAAER,aAAc,EAAGuB,YAAa,GACtCC,MAAO,OATQ,cACbC,EADa,YAYjBjC,EAZiB,SAYWiC,EAASC,OAZpB,mDAcAX,MAAM,gBAAiB,CACvCC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBC,MAAO,CAAErB,YAAa,CAAE2B,IAAK,IAC7BnB,KAAM,CAAER,YAAa,EAAGuB,WAAY,GACpCC,MAAO,OAtBQ,eAcjBC,EAdiB,YAyBjB/B,EAzBiB,UAyBU+B,EAASC,OAzBnB,oDA2BEX,MAAM,cAAe,CACvCC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBC,MAAO,CAAErB,YAAa,CAAEsB,IAAK,IAC7Bd,KAAM,CAAER,aAAc,GACtBwB,MAAO,OAnCQ,eA2BbI,EA3Ba,YAsCjBtC,EAtCiB,UAsCSsC,EAAOF,OAtChB,oDAwCFX,MAAM,cAAe,CACnCC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBC,MAAO,CAAErB,YAAa,CAAE2B,IAAK,IAC7BnB,KAAM,CAAER,YAAa,EAAGuB,WAAY,GACpCC,MAAO,OAhDQ,eAwCjBI,EAxCiB,YAmDjBhC,EAnDiB,UAmDQgC,EAAOF,OAnDf,+EAAH,qDAqDfG,KACE,CAAC1C,EAAM2C,OAET,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,mDAAyB5C,EAAiB6C,OAA1C,KACA,kBAAC,IAAD,CACCC,SAAS,OACTC,KAAM/C,EACNgD,QAASpC,EACTqC,SAAO,EACPC,WAAS,EACTC,OAAO,QACPC,UAAW,SACXC,WAAY7C,KAGd,kBAACoC,EAAA,EAAD,KACC,qDAA2BtC,EAAgBuC,OAA3C,KACA,kBAAC,IAAD,CACCC,SAAS,OACTC,KAAMzC,EACN0C,QAASpC,EACTqC,SAAO,EACPC,WAAS,EACTC,OAAO,QACPC,UAAW,SACXC,WAAY7C,MAIf,kBAACmC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,oDACA,kBAAC,IAAD,CACCE,SAAS,OACTC,KAAM7C,EACN8C,QAAS1B,EACT2B,SAAO,EACPC,WAAS,EACTC,OAAO,QACPC,UAAW,SACXC,WAAY7C,KAGd,kBAACoC,EAAA,EAAD,KACC,sDACA,kBAAC,IAAD,CACCE,SAAS,OACTC,KAAM3C,EACN4C,QAAS1B,EACT2B,SAAO,EACPC,WAAS,EACTC,OAAO,QACPC,UAAW,SACXC,WAAY7C,Q,gCC/GH8C,EAzEO,SAACxD,GAAW,IAAD,EACuBA,EAAM2C,KAArDc,EADwB,EACxBA,gBAAiBC,EADO,EACPA,MAAOC,EADA,EACAA,OAAQC,EADR,EACQA,WADR,EAGF3D,mBAAS,MAHP,mBAGzB4D,EAHyB,KAGhBC,EAHgB,OAIQ7D,mBAAS,IAJjB,mBAIzB8D,EAJyB,KAIXC,EAJW,KAMhCtC,qBAAU,WACTuC,OAGD,IAAMA,EAAkB,WACnBR,KACHG,GAAW,SAACC,EAASK,GACpBJ,EAAWD,GACXG,EAAgBE,OAKnB,OACC,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACzB,kBAACF,EAAA,EAAOG,MAAR,0BACA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBACnB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACd,kBAAC,IAAD,CACCC,OAAK,EACL1D,GAAG,IACHyD,UAAU,kCACVE,YAAa,CACZC,WAAY,SALd,UAUCtB,KACA,oCACC,kBAAC,IAAD,CACCtC,GAAG,UACHyD,UAAU,kCACVE,YAAa,CACZC,WAAY,SAJd,aASA,kBAAC,IAAD,CACC5D,GAAG,YACHyD,UAAU,kCACVE,YAAa,CACZC,WAAY,SAJd,iBAYFlB,EACA,kBAACM,EAAA,EAAOa,KAAR,sBAA4BnB,EAAQoB,MAEpC,kBAACd,EAAA,EAAOa,KAAR,yBAA+BjB,GAEhC,kBAACmB,EAAA,EAAD,CAAMC,QAAM,GACX,kBAACC,EAAA,EAAD,CAAQC,QAAS5B,IAAoBE,EAASD,GAC5CD,IAAoB,UAAY,c,iBCbxB6B,EAtDQ,SAAC,GAUlB,EATLL,KASM,IARNM,EAQK,EARLA,MACAC,EAOK,EAPLA,SACAC,EAMK,EANLA,SACAC,EAKK,EALLA,cACAC,EAIK,EAJLA,SACAC,EAGK,EAHLA,gBAEAC,GACK,EAFL3B,MAEK,EADL2B,SAEA,OACC,oCACC,kBAAC,IAAD,CACCnB,GAAG,mBACHoB,SAAUP,EACVQ,SAAU,CAAC,SAAU,SACrBP,SAAUA,EACVC,SAAUA,EACVI,QAASA,EACTG,YAAaN,EACbE,gBAAiBA,EACjBD,SAAUA,EACVM,uBAAwB,SAACC,GAAD,OACvB,6BACEA,EAAOC,OADT,KACmBD,EAAOE,MACzB,6BACC,+BACE,iBACD,kBAAC,IAAD,CACC3G,MAAOyG,EAAO9D,WACd1C,YAAa,OACbC,mBAAmB,QAMxB0G,UAAQ,M,QC4DGC,EAlGK,SAAC,GAAgB,IAAdH,EAAa,EAAbA,OAEtB,OACC,yBACCI,MACsD,CAAEC,OAAQ,SAGhE,kBAAC,IAAD,CAAMrF,GAAE,kBAAagF,EAAO/E,OAC3B,wBAAImF,MAAO,CAAEE,MAAO,SAClBN,EAAOA,OADT,KACmBA,EAAOC,QAG3B,kBAACM,EAAA,EAAD,CAAOvD,SAAO,EAACwD,UAAQ,EAACC,KAAK,KAAKL,MAAO,CAAEM,MAAO,SACjD,+BACC,4BACC,2CACA,4BACC,kBAAC,IAAD,CACCpH,MAAO0G,EAAOtF,YACdnB,YAAa,OACbC,mBAAmB,EACnBC,aAAc,MAIjB,4BACC,2CACA,4BACC,kBAAC,IAAD,CACCH,MAAO0G,EAAO/D,WACd1C,YAAa,OACbC,mBAAmB,MAItB,4BACC,iDACA,4BACC,kBAAC,IAAD,CACCF,MAAO0G,EAAOW,aACdpH,YAAa,OACbC,mBAAmB,EACnBC,aAAc,EACdE,OAAQ,MACN,MAGL,4BACC,0CACA,4BACC,kBAAC,IAAD,CACCL,MAAO0G,EAAOY,UACdrH,YAAa,OACbC,mBAAmB,IACjB,IALJ,IAMGwG,EAAOa,cANV,MASD,4BACC,4CACA,4BACC,kBAAC,IAAD,CACCvH,MAAO0G,EAAOc,YACdvH,YAAa,OACbC,mBAAmB,MAItB,4BACC,kDACA,4BACC,kBAAC,IAAD,CACCF,MAAO0G,EAAOe,cACdxH,YAAa,OACbC,mBAAmB,EACnBC,aAAc,EACdE,OAAQ,QAIX,4BACC,2CACA,4BACC,kBAAC,IAAD,CACCL,MAAO0G,EAAOgB,WACdzH,YAAa,OACbC,mBAAmB,IACjB,IALJ,IAMGwG,EAAOiB,eANV,UC7CSC,EArCM,SAAC,GAAkB,IAAhB/E,EAAe,EAAfA,SAAe,EACErC,mBAAS,IADX,mBAC/BqH,EAD+B,KACjBC,EADiB,KAqBtC,OAlBA7F,qBAAU,YACM,uCAAG,gCAAAC,EAAA,6DACXP,EAAOkB,EAASkF,KAAI,SAACC,GAC1B,OAAOA,EAAErG,QAFO,SAIIQ,MAAM,2BAA4B,CACtDC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CAAEb,KAAMA,MATb,cAIXsG,EAJW,gBAWEA,EAAOnF,OAXT,cAWXR,EAXW,gBAYXwF,EAAgBxF,GAZL,2CAAH,qDAcfW,KACE,CAACJ,IAGH,oCACC,kBAACM,EAAA,EAAD,CAAW+E,MAAM,MAEhB,kBAAC9E,EAAA,EAAD,CAAK+E,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrBR,EAAaE,KAAI,SAACrB,EAAQ4B,GAAT,OACjB,kBAACjF,EAAA,EAAD,CAAKkF,IAAE,EAACD,IAAKA,GACZ,kBAAC,EAAD,CAAa5B,OAAQA,YC6Cb8B,EAxEM,SAACjI,GAAW,IAAD,EACaC,mBAAS,IADtB,mBACxBiI,EADwB,KACRC,EADQ,OAEiBlI,mBAAS,IAF1B,mBAExBmI,EAFwB,KAENC,EAFM,KAI/B3G,qBAAU,YACM,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,qBAAsB,CAChDC,OAAQ,MACRC,QAAS,CACRwG,cAAc,UAAD,OAAYtI,EAAM2C,KAAK4F,kBACpC,eAAgB,sBALD,cACXb,EADW,gBAQEA,EAAOnF,OART,OAQXR,EARW,OAUjBsG,EAAoBtG,EAAI,UAAgB,IAVvB,2CAAH,qDAYfW,KACE,CAAC1C,EAAM2C,OAEV,IAAM6F,EAAY,uCAAG,WAAO7C,GAAP,iBAAAhE,EAAA,sEACCC,MAAM,qBAAsB,CAChDC,OAAQ,OACRC,QAAS,CACRwG,cAAc,UAAD,OAAYtI,EAAM2C,KAAK4F,kBACpC,eAAgB,oBAEjBxG,KAAMC,KAAKC,UAAU,CAAEK,SAAUqD,MAPd,cACd+B,EADc,gBASDA,EAAOnF,OATN,OASdR,EATc,OAUpBsG,EAAoBtG,EAAI,MAAJ,UAA6B,IAV7B,2CAAH,sDAaZ0G,EAAY,uCAAG,WAAOvG,GAAP,iBAAAP,EAAA,sEACCC,MAAM,uBAAwB,CAClDC,OAAQ,OACRC,QAAS,CACRwG,cAAc,UAAD,OAAYtI,EAAM2C,KAAK4F,kBACpC,eAAgB,oBAEjBxG,KAAMC,KAAKC,UAAU,CAAEyG,UAAWxG,MAPf,cACdwF,EADc,gBASDA,EAAOnF,OATN,OASdR,EATc,OAUpBoG,EAAkBpG,GAVE,2CAAH,sDAalB,OACC,oCACC,kBAACa,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,EAAD,CACCmC,KAAK,SACLM,MAAM,SACNM,QAASqC,EACTvC,SAAUyC,EACV1C,cAAc,kBACdF,SAAUgD,EACV/C,SAAUgD,MAIb,kBAAC5F,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,EAAD,CAAcR,SAAU8F,S,QClE1BO,EAAe,KACfC,EAAa,KAEIC,E,WACpB,WAAYC,GAAU,IAAD,gCAarBpF,MAAQ,WACPqF,aAAaC,QArBW,oBAuBvBhH,KAAKC,UAAU,EAAK6G,QAAQG,WAE7B,EAAKC,MAAMC,aAlBS,KAqBrBC,qBAAuB,WACtB,EAAKF,MAAMG,WAAU,SAACC,EAAKC,GAC1B,GAAIA,GAAcA,EAAWC,aAAeD,EAAWE,QAAS,CAC/D,EAAKC,WAAWH,GAChB,IAAMI,EACuC,cAA5CZ,aAAaa,QAjCQ,qBAkClB,IACA5H,KAAK6H,MAAMd,aAAaa,QAnCN,sBAoCtB,EAAKd,QAAQgB,KAAKH,GAClBZ,aAAaC,QApCC,YAoCkB,aACtBM,IACV,EAAKR,QAAQgB,KAAK,KAClBC,MAAM,UAAD,OAAWT,EAAIpF,MAAf,8CACL8F,QAAQC,IAAIX,IAGbP,aAAamB,WA5CU,yBAOJ,KAyCrBR,WAAa,SAACH,GAGbX,EAAoC,IAAvBW,EAAWY,WAAmB,IAAIC,MAAOC,UACtD1B,EAAeY,EAAWC,YACfD,EAAWE,QACtB,EAAKa,wBA/Ce,KAsDrB3G,OAAS,WACR,EAAKuF,MAAMvF,OAAO,CACjB4G,SAAUC,mCACVC,SAAU,0BAEX1B,aAAamB,WAjEG,cAMI,KA8DrB3B,eAAiB,WAChB,IAAKI,EACJ,MAAM,IAAI+B,MAAM,0BAEjB,OAAO/B,GAlEa,KAqErB/E,WAAa,SAAC+G,GACb,GAAI,EAAKC,YAAa,OAAOD,EAAG,EAAKC,aACrC,EAAK1B,MAAM2B,OAAOC,SAAS,EAAKvC,kBAAkB,SAACe,EAAKzF,GACnDA,IAAS,EAAK+G,YAAc/G,GAChC8G,EAAG9G,EAASyF,OAxEbyB,KAAKjC,QAAUA,EACfiC,KAAKH,YAAc,KACnBG,KAAK7B,MAAQ,IAAIA,IAAM8B,QAAQ,CAC9BC,OAAQT,6BACRU,SAAUV,mCACVW,YAAaX,iCACbY,SAAUZ,wBACVa,aAAc,iBACdC,MAAO,yB,8DA0CR,OAAO,IAAIlB,MAAOC,UAAYzB,I,iCA0BpB+B,GAAK,IAAD,OAC0B,cAApC5B,aAAaa,QApFD,cAqFfmB,KAAK7B,MAAMqC,aAAa,IAAI,SAACjC,EAAK5B,GAC7B4B,EACHU,QAAQC,IAAR,iBAAsBX,EAAIpF,MAA1B,cAAqCoF,EAAIkC,kBAAzC,MAEA,EAAK9B,WAAWhC,GAEbiD,GAAIA,EAAGrB,EAAK5B,Q,6CAKK,IAAD,OAChB+D,EAAQ7C,EAAawB,KAAKsB,MAC5BD,EAAQ,GAAGE,YAAW,kBAAM,EAAKC,eAAcH,O,KCnFtCI,E,4MAfdC,kBAAoB,WAGnB,IAAI,8BAA8BC,KAAK,EAAK/L,MAAMiJ,SAAS+C,MAG1D,MAAM,IAAItB,MAAM,yBAFhB,EAAK1K,MAAM2C,KAAKyG,wB,uDAOjB,OAAO,2C,GAZc6C,aCwDRC,EArDM,SAAC,GAUhB,EATLjH,KASM,IARNM,EAQK,EARLA,MACAC,EAOK,EAPLA,SACAC,EAMK,EANLA,SACAC,EAKK,EALLA,cACAC,EAIK,EAJLA,SAEAwG,GAEK,EAHLjI,MAGK,EAFLiI,WACAtG,EACK,EADLA,QAEA,OACC,oCACC,kBAAC,IAAD,CACCnB,GAAG,mBACHoB,SAAUP,EACVC,SAAUA,EACVC,SAAUA,EACVI,QAASA,EACTG,YAAaN,EACbC,SAAUA,EACVwG,UAAWA,EACXlG,uBAAwB,SAACC,GAAD,OACvB,6BACEA,EAAOE,MACR,6BACC,+BACE,iBACD,kBAAC,IAAD,CACC3G,MAAOyG,EAAO9D,WACd1C,YAAa,OACbC,mBAAmB,QAMxB0G,UAAQ,MC2DG+F,EAhGI,SAAC,GAAe,IAAbhG,EAAY,EAAZA,MAErB,OACC,yBACCG,MACsD,CAAEC,OAAQ,SAGhE,kBAAC,IAAD,CAAMrF,GAAE,iBAAYiF,EAAMhF,OACzB,wBAAImF,MAAO,CAAEE,MAAO,SAAWL,EAAMA,QAEtC,kBAACM,EAAA,EAAD,CAAOvD,SAAO,EAACwD,UAAQ,EAACC,KAAK,KAAKL,MAAO,CAAEM,MAAO,SACjD,+BACC,4BACC,2CACA,4BACC,kBAAC,IAAD,CACCpH,MAAO2G,EAAMvF,YACbnB,YAAa,OACbC,mBAAmB,EACnBC,aAAc,MAIjB,4BACC,2CACA,4BACC,kBAAC,IAAD,CACCH,MAAO2G,EAAMhE,WACb1C,YAAa,OACbC,mBAAmB,MAItB,4BACC,iDACA,4BACC,kBAAC,IAAD,CACCF,MAAO2G,EAAMU,aACbpH,YAAa,OACbC,mBAAmB,EACnBC,aAAc,EACdE,OAAQ,MACN,MAGL,4BACC,0CACA,4BACC,kBAAC,IAAD,CACCL,MAAO2G,EAAMW,UACbrH,YAAa,OACbC,mBAAmB,IACjB,IALJ,IAMGyG,EAAMY,cANT,MASD,4BACC,4CACA,4BACC,kBAAC,IAAD,CACCvH,MAAO2G,EAAMa,YACbvH,YAAa,OACbC,mBAAmB,MAItB,4BACC,kDACA,4BACC,kBAAC,IAAD,CACCF,MAAO2G,EAAMc,cACbxH,YAAa,OACbC,mBAAmB,EACnBC,aAAc,EACdE,OAAQ,QAIX,4BACC,2CACA,4BACC,kBAAC,IAAD,CACCL,MAAO2G,EAAMe,WACbzH,YAAa,OACbC,mBAAmB,IACjB,IALJ,IAMGyG,EAAMgB,eANT,UC3CSiF,EArCI,SAAC,GAAgB,IAAd5J,EAAa,EAAbA,OAAa,EACExC,mBAAS,IADX,mBAC3BqM,EAD2B,KACfC,EADe,KAqBlC,OAlBA7K,qBAAU,YACM,uCAAG,gCAAAC,EAAA,6DACXP,EAAOqB,EAAO+E,KAAI,SAACgF,GACxB,OAAOA,EAAEpL,QAFO,SAIIQ,MAAM,yBAA0B,CACpDC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CAAEb,KAAMA,MATb,cAIXsG,EAJW,gBAWEA,EAAOnF,OAXT,cAWXR,EAXW,gBAYXwK,EAAcxK,GAZH,2CAAH,qDAcfW,KACE,CAACD,IAGH,oCACC,kBAACG,EAAA,EAAD,CAAW+E,MAAM,MAEhB,kBAAC9E,EAAA,EAAD,CAAK+E,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACrBwE,EAAW9E,KAAI,SAACpB,EAAO2B,GAAR,OACf,kBAACjF,EAAA,EAAD,CAAKkF,IAAE,EAACD,IAAKA,GACZ,kBAAC,EAAD,CAAY3B,MAAOA,YCqDXqG,EAhFI,SAACzM,GAAU,MAEWC,mBAAS,IAFpB,mBAEtByM,EAFsB,KAERC,EAFQ,OAKe1M,mBAAS,IALxB,mBAKtB2M,EALsB,KAKNC,EALM,OAMK5M,oBAAS,GANd,mBAMtBkM,EANsB,KAMXW,EANW,KAQ7BpL,qBAAU,WACToL,GAAa,GACE,uCAAG,8BAAAnL,EAAA,sEACIC,MAAM,mBAAoB,CAC9CC,OAAQ,MACRC,QAAS,CACRwG,cAAc,UAAD,OAAYtI,EAAM2C,KAAK4F,kBACpC,eAAgB,sBALD,cACXb,EADW,gBAQEA,EAAOnF,OART,OAQXR,EARW,OASjB8K,EAAkB9K,EAAI,QAAc,IATnB,2CAAH,oDAWfW,GACAoK,GAAa,KACX,CAAC9M,EAAM2C,OAEV,IAAM6F,EAAY,uCAAG,WAAO7C,GAAP,iBAAAhE,EAAA,6DACpBmL,GAAa,GADO,SAEClL,MAAM,mBAAoB,CAC9CC,OAAQ,OACRC,QAAS,CACRwG,cAAc,UAAD,OAAYtI,EAAM2C,KAAK4F,kBACpC,eAAgB,oBAEjBxG,KAAMC,KAAKC,UAAU,CAAEQ,OAAQkD,MARZ,cAEd+B,EAFc,gBAUDA,EAAOnF,OAVN,OAUdR,EAVc,OAWpB8K,EAAkB9K,EAAI,MAAJ,QAA2B,IAC7C+K,GAAa,GAZO,2CAAH,sDAeZrE,EAAY,uCAAG,WAAOvG,GAAP,iBAAAP,EAAA,sEACCC,MAAM,qBAAsB,CAChDC,OAAQ,OACRC,QAAS,CACRwG,cAAc,UAAD,OAAYtI,EAAM2C,KAAK4F,kBACpC,eAAgB,oBAEjBxG,KAAMC,KAAKC,UAAU,CAAEyG,UAAWxG,MAPf,cACdwF,EADc,gBASDA,EAAOnF,OATN,OASdR,EATc,OAUpB4K,EAAgB5K,GAVI,2CAAH,sDAalB,OACC,oCACC,kBAACa,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,EAAD,CACCmC,KAAK,eACLM,MAAM,QACNM,QAAS6G,EACThH,cAAc,gBACdC,SAAUiH,EACVpH,SAAUgD,EACV/C,SAAUgD,EACV0D,UAAWA,MAId,kBAACtJ,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,EAAD,CAAYL,OAAQmK,S,QC7EXG,EADK,IAAIC,IAAMC,cCIxBC,EAAe,SAAC,GAA+C,IAAlCjB,EAAiC,EAA5CkB,UAAsBC,EAAsB,EAAtBA,OAAWC,EAAW,sCACnE,OACC,kBAAC,EAAYC,SAAb,MACE,SAAC3K,GAAD,OACA,kBAAC,IAAD,iBACK0K,EADL,CAECE,OAAQ,SAACvN,GAER,OAAK2C,EAAKc,kBAGN2J,EAAOrK,OAAS,IAAMJ,EAAK6K,cAAcJ,GAE3C,iGAEQA,EAAOK,KAAK,KAFpB,KAQK,kBAACxB,EAAD,eAAWtJ,KAAMA,GAAU3C,IAbE2C,EAAKe,gBA0B/CwJ,EAAaQ,aAAe,CAC3BN,OAAQ,IAGMF,QCiEAS,EApGI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAGL3N,mBAAS,IAHJ,mBAG1BkG,EAH0B,KAGlB0H,EAHkB,OAIS5N,mBAAS,IAJlB,mBAI1B6N,EAJ0B,KAIXC,EAJW,KAK3B3M,EAAOwM,EAAMI,OAAO5M,KAC1B4I,QAAQC,IAAI7I,GACZ,IAAM8B,EAAU,CACf,CACCnC,UAAW,OACXC,KAAM,OACNK,MAAM,GAEP,CACCN,UAAW,QACXC,KAAM,QACNE,UAAWK,EAAYjC,gBACvB+B,MAAM,GAEP,CACCN,UAAW,cACXC,KAAM,gBACNE,UAAWK,EAAYjC,gBACvB+B,MAAM,GAEP,CACCN,UAAW,eACXC,KAAM,iBACNE,UAAWK,EAAYjC,gBACvB+B,MAAM,GAGP,CACCN,UAAW,SACXC,KAAM,SACNE,UAAWK,EAAYjC,gBACvB+B,MAAM,GAEP,CACCN,UAAW,eACXC,KAAM,gBACNE,UAAWK,EAAYjC,gBACvB+B,MAAM,GAEP,CACCN,UAAW,gBACXC,KAAM,iBACNE,UAAWK,EAAYjC,gBACvB+B,MAAM,IA0BR,OAhBAK,qBAAU,YACM,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,2BAA4B,CACtDC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CAAEb,KAAM,CAACA,OANd,cACXsG,EADW,gBAQEA,EAAOnF,OART,OAQXR,EARW,OASjB8L,EAAU9L,EAAK,IACfgM,EAAiBhM,EAAK,GAAGkM,SAVR,2CAAH,qDAYfvL,KACE,CAACtB,IAGH,kBAACwB,EAAA,EAAD,CAAW+E,OAAK,GACf,kBAAC9E,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,EAAD,CAAaqD,OAAQA,MAGvB,kBAACtD,EAAA,EAAD,CAAKQ,QAAM,GACV,kBAACP,EAAA,EAAD,KACC,6CACA,kBAAC,IAAD,CACCE,SAAS,OACTC,KAAM6K,EACN5K,QAASA,EACTgL,cArCiB,CACrB,CACCnN,UAAW,OACXoN,MAAO,SAmCJhL,SAAO,EACPC,WAAS,EACTC,OAAO,QACPC,UAAW,eCaF8K,EAzGG,SAAC,GAAe,IAAbR,EAAY,EAAZA,MAAY,EACN3N,mBAAS,IADH,mBACzBmG,EADyB,KAClBiI,EADkB,OAEQpO,mBAAS,IAFjB,mBAEzBqO,EAFyB,KAEXC,EAFW,KAG1BnN,EAAOwM,EAAMI,OAAO5M,KAEpB8B,EAAU,CACf,CACCnC,UAAW,OACXC,KAAM,OACNM,KAAM,OACND,MAAM,GAEP,CACCN,UAAW,QACXC,KAAM,QACNM,KAAM,SACNJ,UAAWK,EAAYjC,gBACvB+B,MAAM,GAEP,CACCN,UAAW,cACXC,KAAM,gBACNM,KAAM,SACNJ,UAAWK,EAAYjC,gBACvB+B,MAAM,GAEP,CACCN,UAAW,eACXC,KAAM,iBACNM,KAAM,SACNJ,UAAWK,EAAYjC,gBACvB+B,MAAM,GAGP,CACCN,UAAW,SACXC,KAAM,SACNM,KAAM,SACNJ,UAAWK,EAAYjC,gBACvB+B,MAAM,GAEP,CACCN,UAAW,eACXC,KAAM,gBACNM,KAAM,SACNJ,UAAWK,EAAYjC,gBACvB+B,MAAM,GAEP,CACCN,UAAW,gBACXC,KAAM,iBACNM,KAAM,SACNJ,UAAWK,EAAYjC,gBACvB+B,MAAM,IA0BR,OAhBAK,qBAAU,YACM,uCAAG,8BAAAC,EAAA,sEACIC,MAAM,yBAA0B,CACpDC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CAAEb,KAAM,CAACA,OANd,cACXsG,EADW,gBAQEA,EAAOnF,OART,OAQXR,EARW,OASjBsM,EAAStM,EAAK,IACdwM,EAAgBxM,EAAK,GAAGkM,SAVP,2CAAH,qDAYfvL,KACE,CAACtB,IAGH,kBAACwB,EAAA,EAAD,CAAW+E,OAAK,GACf,kBAAC9E,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,EAAD,CAAYsD,MAAOA,MAGrB,kBAACvD,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,6CACA,kBAAC,IAAD,CACCE,SAAS,OACTC,KAAMqL,EACNpL,QAASA,EACTgL,cArCiB,CACrB,CACCnN,UAAW,OACXoN,MAAO,SAmCJhL,SAAO,EACPC,WAAS,EACTC,OAAO,QACPC,UAAW,eChDFkL,E,kDA1Cd,WAAYxO,GAAQ,IAAD,8BAClB,cAAMA,IACDoG,MAAQ,CACZzD,KAAM,IAAIkG,EAAK,EAAK7I,MAAM8I,SAC1B2F,sBAAsB,GAJL,E,gEAQE,IAAD,OACnB1D,KAAK3E,MAAMzD,KAAKiJ,YAAW,kBAC1B,EAAKyC,SAAS,CAAEI,sBAAsB,S,+BAI9B,IACD9L,EAASoI,KAAK3E,MAAdzD,KACR,OAAKoI,KAAK3E,MAAMqI,qBAEf,kBAAC,EAAYC,SAAb,CAAsBjP,MAAOkD,GAC5B,kBAAC,EAAD,CAAeA,KAAMA,IACrB,yBAAK+B,GAAG,aACP,kBAAC,IAAD,KACC,kBAAC,IAAD,CACCiK,KAAK,IACLpB,OAAQ,SAACvN,GAAD,OAAW,kBAAC,EAAD,eAAU2C,KAAMA,GAAU3C,KAC7C6E,OAAK,IAEN,kBAAC,IAAD,CACC8J,KAAK,YACLpB,OAAQ,SAACvN,GAAD,OAAW,kBAAC,EAAD,eAAU2C,KAAMA,GAAU3C,OAE9C,kBAAC,EAAD,CAAc2O,KAAK,YAAYxB,UAAWlF,EAAcpD,OAAK,IAC7D,kBAAC,EAAD,CAAc8J,KAAK,UAAUxB,UAAWV,EAAY5H,OAAK,IACzD,kBAAC,EAAD,CAAc8J,KAAK,gBAAgBxB,UAAWQ,EAAY9I,OAAK,IAC/D,kBAAC,EAAD,CAAc8J,KAAK,eAAexB,UAAWiB,EAAWvJ,OAAK,OAlBpB,iB,GAjB7BoH,a,4BCFE2C,QACW,cAA7BC,OAAO5F,SAAS6F,UAEe,UAA7BD,OAAO5F,SAAS6F,UAEhBD,OAAO5F,SAAS6F,SAASlB,MACvB,2DCLNmB,IAASxB,OACR,kBAAC,IAAMyB,WAAP,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAO7B,UAAWqB,MAGpBS,SAASC,eAAe,SDgHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvL,GACL8F,QAAQ9F,MAAMA,EAAMwL,a","file":"static/js/main.ded31b57.chunk.js","sourcesContent":["import React from \"react\";\nimport NumberFormat from \"react-number-format\";\n\nconst TableHelpers = () => {\n\tconst numberFormatter = (cell, row) => {\n\t\treturn (\n\t\t\t<NumberFormat\n\t\t\t\tvalue={cell}\n\t\t\t\tdisplayType={\"text\"}\n\t\t\t\tthousandSeparator={true}\n\t\t\t\tdecimalScale={2}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst percentFormatter = (cell, row) => {\n\t\treturn (\n\t\t\t<NumberFormat\n\t\t\t\tvalue={cell}\n\t\t\t\tdisplayType={\"text\"}\n\t\t\t\tthousandSeparator={true}\n\t\t\t\tdecimalScale={2}\n\t\t\t\tsuffix={\"%\"}\n\t\t\t/>\n\t\t);\n\t};\n\treturn { numberFormatter, percentFormatter };\n};\n\nexport default TableHelpers();\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ReactbootStrapTable from \"react-bootstrap-table-next\";\nimport TableHelper from \"../utilities/TableHelpers\";\nimport { Link } from \"react-router-dom\";\n\nconst HomePage = (props) => {\n\tconst [regressingStates, setRegressingStates] = useState([]);\n\tconst [regressingCounties, setRegressingCounties] = useState([]);\n\tconst [improvingCounties, setImprovingCounties] = useState([]);\n\tconst [improvingStates, setImprovingStates] = useState([]);\n\n\tconst stateFormatter = (cell, row) => {\n\t\treturn <Link to={`/state/${row.fips}`}>{cell}</Link>;\n\t};\n\n\tconst countyFormatter = (cell, row) => {\n\t\treturn <Link to={`/county/${row.fips}`}>{cell}</Link>;\n\t};\n\n\tconst rowFormatter = (row, rowIndex) => {\n\t\tlet classes = null;\n\t\tif (row.healthScore > 1.2) classes = \"text-danger\";\n\t\telse if (row.healthScore > 0.8) classes = \"text-warning\";\n\t\telse if (row.healthScore < 0.8) classes = \"text-success\";\n\t\treturn classes;\n\t};\n\tconst stateColumns = [\n\t\t{\n\t\t\tdataField: \"fips\",\n\t\t\ttext: \"FIPS\",\n\t\t\thidden: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"state\",\n\t\t\ttext: \"State\",\n\t\t\tformatter: stateFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"healthScore\",\n\t\t\ttext: \"Covid Score\",\n\t\t\ttype: \"number\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"caseIncrease\",\n\t\t\ttext: \"% Increase in Cases\",\n\t\t\ttype: \"number\",\n\t\t\tformatter: TableHelper.percentFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"deathIncrease\",\n\t\t\ttext: \"% Increase in Deaths\",\n\t\t\ttype: \"number\",\n\t\t\tformatter: TableHelper.percentFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"peakCasesDate\",\n\t\t\ttext: \"Cases Peaked On\",\n\t\t\ttype: \"date\",\n\t\t\tsort: true,\n\t\t},\n\t];\n\n\tlet countyColumns = [\n\t\t{\n\t\t\tdataField: \"county\",\n\t\t\ttext: \"County\",\n\t\t\tformatter: countyFormatter,\n\t\t\tsort: true,\n\t\t},\n\t];\n\n\tcountyColumns = countyColumns.concat(stateColumns);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tlet counties = await fetch(\"/api/counties\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tquery: { healthScore: { $gt: 1 } },\n\t\t\t\t\tsort: { healthScore: -1, totalCases: -1 },\n\t\t\t\t\tlimit: 30,\n\t\t\t\t}),\n\t\t\t});\n\t\t\tsetRegressingCounties(await counties.json());\n\n\t\t\tcounties = await fetch(\"/api/counties\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tquery: { healthScore: { $lt: 1 } },\n\t\t\t\t\tsort: { healthScore: 1, totalCases: 1 },\n\t\t\t\t\tlimit: 30,\n\t\t\t\t}),\n\t\t\t});\n\t\t\tsetImprovingCounties(await counties.json());\n\n\t\t\tlet states = await fetch(\"/api/states\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tquery: { healthScore: { $gt: 1 } },\n\t\t\t\t\tsort: { healthScore: -1 },\n\t\t\t\t\tlimit: 30,\n\t\t\t\t}),\n\t\t\t});\n\t\t\tsetRegressingStates(await states.json());\n\n\t\t\tstates = await fetch(\"/api/states\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tquery: { healthScore: { $lt: 1 } },\n\t\t\t\t\tsort: { healthScore: 1, totalCases: 1 },\n\t\t\t\t\tlimit: 30,\n\t\t\t\t}),\n\t\t\t});\n\t\t\tsetImprovingStates(await states.json());\n\t\t};\n\t\tfetchData();\n\t}, [props.auth]);\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h4>States Trending Up ({regressingStates.length})</h4>\n\t\t\t\t\t<ReactbootStrapTable\n\t\t\t\t\t\tkeyField=\"fips\"\n\t\t\t\t\t\tdata={regressingStates}\n\t\t\t\t\t\tcolumns={stateColumns}\n\t\t\t\t\t\tstriped\n\t\t\t\t\t\tcondensed\n\t\t\t\t\t\theight=\"120px\"\n\t\t\t\t\t\tscrollTop={\"Bottom\"}\n\t\t\t\t\t\trowClasses={rowFormatter}\n\t\t\t\t\t></ReactbootStrapTable>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<h4>States Trending Down ({improvingStates.length})</h4>\n\t\t\t\t\t<ReactbootStrapTable\n\t\t\t\t\t\tkeyField=\"fips\"\n\t\t\t\t\t\tdata={improvingStates}\n\t\t\t\t\t\tcolumns={stateColumns}\n\t\t\t\t\t\tstriped\n\t\t\t\t\t\tcondensed\n\t\t\t\t\t\theight=\"120px\"\n\t\t\t\t\t\tscrollTop={\"Bottom\"}\n\t\t\t\t\t\trowClasses={rowFormatter}\n\t\t\t\t\t></ReactbootStrapTable>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h4>Counties Trending Up</h4>\n\t\t\t\t\t<ReactbootStrapTable\n\t\t\t\t\t\tkeyField=\"fips\"\n\t\t\t\t\t\tdata={regressingCounties}\n\t\t\t\t\t\tcolumns={countyColumns}\n\t\t\t\t\t\tstriped\n\t\t\t\t\t\tcondensed\n\t\t\t\t\t\theight=\"120px\"\n\t\t\t\t\t\tscrollTop={\"Bottom\"}\n\t\t\t\t\t\trowClasses={rowFormatter}\n\t\t\t\t\t></ReactbootStrapTable>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<h4>Counties Trending Down</h4>\n\t\t\t\t\t<ReactbootStrapTable\n\t\t\t\t\t\tkeyField=\"fips\"\n\t\t\t\t\t\tdata={improvingCounties}\n\t\t\t\t\t\tcolumns={countyColumns}\n\t\t\t\t\t\tstriped\n\t\t\t\t\t\tcondensed\n\t\t\t\t\t\theight=\"120px\"\n\t\t\t\t\t\tscrollTop={\"Bottom\"}\n\t\t\t\t\t\trowClasses={rowFormatter}\n\t\t\t\t\t></ReactbootStrapTable>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default HomePage;\n","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nconst NavigationBar = (props) => {\n\tconst { isAuthenticated, login, logout, getProfile } = props.auth;\n\n\tconst [profile, setProfile] = useState(null);\n\tconst [profileError, setProfileError] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tloadUserProfile();\n\t});\n\n\tconst loadUserProfile = () => {\n\t\tif (isAuthenticated()) {\n\t\t\tgetProfile((profile, error) => {\n\t\t\t\tsetProfile(profile);\n\t\t\t\tsetProfileError(error);\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<Navbar bg=\"light\" expand=\"lg\">\n\t\t\t<Navbar.Brand>My Corona Tracker</Navbar.Brand>\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\n\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t<NavLink\n\t\t\t\t\t\texact\n\t\t\t\t\t\tto=\"/\"\n\t\t\t\t\t\tclassName=\"d-inline p-2 bg-light text-dark\"\n\t\t\t\t\t\tactiveStyle={{\n\t\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tTrends\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t{isAuthenticated() && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\tto=\"/states\"\n\t\t\t\t\t\t\t\tclassName=\"d-inline p-2 bg-light text-dark\"\n\t\t\t\t\t\t\t\tactiveStyle={{\n\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tMy States\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\tto=\"/counties\"\n\t\t\t\t\t\t\t\tclassName=\"d-inline p-2 bg-light text-dark\"\n\t\t\t\t\t\t\t\tactiveStyle={{\n\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tMy Counties\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Nav>\n\t\t\t\t{profile ? (\n\t\t\t\t\t<Navbar.Text>Signed in as: {profile.name}</Navbar.Text>\n\t\t\t\t) : (\n\t\t\t\t\t<Navbar.Text>Error logging in {profileError}</Navbar.Text>\n\t\t\t\t)}\n\t\t\t\t<Form inline>\n\t\t\t\t\t<Button onClick={isAuthenticated() ? logout : login}>\n\t\t\t\t\t\t{isAuthenticated() ? \"Log Out\" : \"Log In\"}\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Navbar.Collapse>\n\t\t</Navbar>\n\t);\n};\n\nexport default NavigationBar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport NumberFormat from \"react-number-format\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\n\nconst CountiesSearch = ({\n\tname,\n\tlabel,\n\tonChange,\n\tonSearch,\n\tdefaultOption,\n\tselected,\n\tdefaultSelected,\n\terror,\n\toptions,\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<AsyncTypeahead\n\t\t\t\tid=\"select-typeahead\"\n\t\t\t\tlabelKey={label}\n\t\t\t\tfilterBy={[\"county\", \"state\"]}\n\t\t\t\tonChange={onChange}\n\t\t\t\tonSearch={onSearch}\n\t\t\t\toptions={options}\n\t\t\t\tplaceholder={defaultOption}\n\t\t\t\tdefaultSelected={defaultSelected}\n\t\t\t\tselected={selected}\n\t\t\t\trenderMenuItemChildren={(option) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{option.county}, {option.state}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t{\" Total Cases: \"}\n\t\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\t\tvalue={option.totalCases}\n\t\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tmultiple\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nCountiesSearch.propTypes = {\n\tname: PropTypes.string.isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\tdefaultOption: PropTypes.string,\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\terror: PropTypes.string,\n\toptions: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default CountiesSearch;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport NumberFormat from \"react-number-format\";\nimport { Link } from \"react-router-dom\";\n\nconst CountyTable = ({ county }) => {\n\t// add useEffect to load county info with fips\n\treturn (\n\t\t<div\n\t\t\tstyle={\n\t\t\t\t({ \"max-width\": \"200px\" }, { \"min-width\": \"100px\" }, { margin: \"10px\" })\n\t\t\t}\n\t\t>\n\t\t\t<Link to={`/county/${county.fips}`}>\n\t\t\t\t<h4 style={{ float: \"left\" }}>\n\t\t\t\t\t{county.county}, {county.state}\n\t\t\t\t</h4>\n\t\t\t</Link>\n\t\t\t<Table striped bordered size=\"sm\" style={{ width: \"100%\" }}>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Covid Score</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={county.healthScore}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Total Cases</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={county.totalCases}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Increase in Cases</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={county.caseIncrease}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\t\t\tsuffix={\"%\"}\n\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Peak Cases</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={county.peakCases}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t\t({county.peakCasesDate})\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Total Deaths</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={county.totalDeaths}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Increase in Deaths</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={county.deathIncrease}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\t\t\tsuffix={\"%\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Peak Deaths</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={county.peakDeaths}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t\t({county.peakDeathsDate})\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</div>\n\t);\n};\n\nexport default CountyTable;\n","import React, { useEffect, useState } from \"react\";\nimport CountyTable from \"./CountyTable\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst CountiesList = ({ counties }) => {\n\tconst [countiesData, setCountiesData] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst fips = counties.map((c) => {\n\t\t\t\treturn c.fips;\n\t\t\t});\n\t\t\tconst result = await fetch(\"/api/counties/fipssearch\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ fips: fips }),\n\t\t\t});\n\t\t\tconst body = await result.json();\n\t\t\tawait setCountiesData(body);\n\t\t};\n\t\tfetchData();\n\t}, [counties]);\n\n\treturn (\n\t\t<>\n\t\t\t<Container fluid=\"md\">\n\t\t\t\t{/* <Row>{items}</Row> */}\n\t\t\t\t<Row xs={1} md={3} lg={3}>\n\t\t\t\t\t{countiesData.map((county, key) => (\n\t\t\t\t\t\t<Col sm key={key}>\n\t\t\t\t\t\t\t<CountyTable county={county}></CountyTable>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t))}\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default CountiesList;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CountiesSearch from \"../components/CountiesSearch\";\nimport CountiesList from \"../components/CountiesList\";\n\nconst CountiesPage = (props) => {\n\tconst [searchCounties, setSearchCounties] = useState([]);\n\tconst [selectedCounties, setSelectedCounties] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst result = await fetch(\"/api/user/counties\", {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${props.auth.getAccessToken()}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst body = await result.json();\n\n\t\t\tsetSelectedCounties(body[\"counties\"] || []);\n\t\t};\n\t\tfetchData();\n\t}, [props.auth]);\n\n\tconst handleChange = async (selected) => {\n\t\tconst result = await fetch(\"/api/user/counties\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${props.auth.getAccessToken()}`,\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({ counties: selected }),\n\t\t});\n\t\tconst body = await result.json();\n\t\tsetSelectedCounties(body[\"value\"][\"counties\"] || []);\n\t};\n\n\tconst handleSearch = async (query) => {\n\t\tconst result = await fetch(\"/api/counties/search\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${props.auth.getAccessToken()}`,\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({ nameQuery: query }),\n\t\t});\n\t\tconst body = await result.json();\n\t\tsetSearchCounties(body);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CountiesSearch\n\t\t\t\t\t\t\tname=\"county\"\n\t\t\t\t\t\t\tlabel=\"county\"\n\t\t\t\t\t\t\toptions={searchCounties}\n\t\t\t\t\t\t\tselected={selectedCounties}\n\t\t\t\t\t\t\tdefaultOption=\"Search Counties\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonSearch={handleSearch}\n\t\t\t\t\t\t></CountiesSearch>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<CountiesList counties={selectedCounties}></CountiesList>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default CountiesPage;\n","import auth0 from \"auth0-js\";\n\nconst REDIRECT_ON_LOGIN = \"redirect_on_login\";\nconst LOGGED_IN = \"logged_in\";\nlet _idToken = null;\nlet _accessToken = null;\nlet _expiresAt = null;\n\nexport default class Auth {\n\tconstructor(history) {\n\t\tthis.history = history;\n\t\tthis.userProfile = null;\n\t\tthis.auth0 = new auth0.WebAuth({\n\t\t\tdomain: process.env.REACT_APP_AUTH0_DOMAIN,\n\t\t\tclientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n\t\t\tredirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n\t\t\taudience: process.env.REACT_APP_AUTH0_AUDIENCE,\n\t\t\tresponseType: \"token id_token\",\n\t\t\tscope: \"openid profile email\",\n\t\t});\n\t}\n\n\tlogin = () => {\n\t\tlocalStorage.setItem(\n\t\t\tREDIRECT_ON_LOGIN,\n\t\t\tJSON.stringify(this.history.location)\n\t\t);\n\t\tthis.auth0.authorize();\n\t};\n\n\thandleAuthentication = () => {\n\t\tthis.auth0.parseHash((err, authResult) => {\n\t\t\tif (authResult && authResult.accessToken && authResult.idToken) {\n\t\t\t\tthis.setSession(authResult);\n\t\t\t\tconst redirectLocation =\n\t\t\t\t\tlocalStorage.getItem(REDIRECT_ON_LOGIN) === \"undefined\"\n\t\t\t\t\t\t? \"/\"\n\t\t\t\t\t\t: JSON.parse(localStorage.getItem(REDIRECT_ON_LOGIN));\n\t\t\t\tthis.history.push(redirectLocation);\n\t\t\t\tlocalStorage.setItem(LOGGED_IN, \"true\");\n\t\t\t} else if (err) {\n\t\t\t\tthis.history.push(\"/\");\n\t\t\t\talert(`Error: ${err.error}.  Check the console for further details.`);\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\n\t\t\tlocalStorage.removeItem(REDIRECT_ON_LOGIN);\n\t\t});\n\t};\n\n\tsetSession = (authResult) => {\n\t\t// set the time that the access token will expire\n\t\t// seconds * 1000 + the current epoch time\n\t\t_expiresAt = authResult.expiresIn * 1000 + new Date().getTime();\n\t\t_accessToken = authResult.accessToken;\n\t\t_idToken = authResult.idToken;\n\t\tthis.scheduleTokenRenewal();\n\t};\n\n\tisAuthenticated() {\n\t\treturn new Date().getTime() < _expiresAt;\n\t}\n\n\tlogout = () => {\n\t\tthis.auth0.logout({\n\t\t\tClientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n\t\t\treturnTo: \"http://localhost:3000\",\n\t\t});\n\t\tlocalStorage.removeItem(LOGGED_IN);\n\t};\n\n\tgetAccessToken = () => {\n\t\tif (!_accessToken) {\n\t\t\tthrow new Error(\"No access token found.\");\n\t\t}\n\t\treturn _accessToken;\n\t};\n\n\tgetProfile = (cb) => {\n\t\tif (this.userProfile) return cb(this.userProfile);\n\t\tthis.auth0.client.userInfo(this.getAccessToken(), (err, profile) => {\n\t\t\tif (profile) this.userProfile = profile;\n\t\t\tcb(profile, err);\n\t\t});\n\t};\n\n\trenewToken(cb) {\n\t\tif (localStorage.getItem(LOGGED_IN) !== \"undefined\") {\n\t\t\tthis.auth0.checkSession({}, (err, result) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log(`Error: ${err.error} - ${err.error_description}.`);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setSession(result);\n\t\t\t\t}\n\t\t\t\tif (cb) cb(err, result);\n\t\t\t});\n\t\t}\n\t}\n\n\tscheduleTokenRenewal() {\n\t\tconst delay = _expiresAt - Date.now();\n\t\tif (delay > 0) setTimeout(() => this.renewToken(), delay);\n\t}\n}\n","import React, { Component } from \"react\";\n\nclass Callback extends Component {\n\tcomponentDidMount = () => {\n\t\t// Handle authentication if expected values are in the url\n\n\t\tif (/access_token|id_token|error/.test(this.props.location.hash)) {\n\t\t\tthis.props.auth.handleAuthentication();\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid callback URL.\");\n\t\t}\n\t};\n\n\trender() {\n\t\treturn <h1>Loading</h1>;\n\t}\n}\n\nexport default Callback;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\nimport NumberFormat from \"react-number-format\";\n\nconst StatesSearch = ({\n\tname,\n\tlabel,\n\tonChange,\n\tonSearch,\n\tdefaultOption,\n\tselected,\n\terror,\n\tisLoading,\n\toptions,\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<AsyncTypeahead\n\t\t\t\tid=\"select-typeahead\"\n\t\t\t\tlabelKey={label}\n\t\t\t\tonChange={onChange}\n\t\t\t\tonSearch={onSearch}\n\t\t\t\toptions={options}\n\t\t\t\tplaceholder={defaultOption}\n\t\t\t\tselected={selected}\n\t\t\t\tisLoading={isLoading}\n\t\t\t\trenderMenuItemChildren={(option) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{option.state}\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t\t{\" Total Cases: \"}\n\t\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\t\tvalue={option.totalCases}\n\t\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\tmultiple\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nStatesSearch.propTypes = {\n\tname: PropTypes.string.isRequired,\n\tlabel: PropTypes.string.isRequired,\n\tonChange: PropTypes.func.isRequired,\n\tdefaultOption: PropTypes.string,\n\tvalue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\terror: PropTypes.string,\n\toptions: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default StatesSearch;\n","import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { Link } from \"react-router-dom\";\nimport NumberFormat from \"react-number-format\";\n\nconst StateTable = ({ state }) => {\n\t// add useEffect to load state info with fips\n\treturn (\n\t\t<div\n\t\t\tstyle={\n\t\t\t\t({ \"max-width\": \"200px\" }, { \"min-width\": \"100px\" }, { margin: \"10px\" })\n\t\t\t}\n\t\t>\n\t\t\t<Link to={`/state/${state.fips}`}>\n\t\t\t\t<h4 style={{ float: \"left\" }}>{state.state}</h4>\n\t\t\t</Link>\n\t\t\t<Table striped bordered size=\"sm\" style={{ width: \"100%\" }}>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Covid Score</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={state.healthScore}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Total Cases</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={state.totalCases}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Increase in Cases</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={state.caseIncrease}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\t\t\tsuffix={\"%\"}\n\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Peak Cases</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={state.peakCases}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t\t({state.peakCasesDate})\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Total Deaths</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={state.totalDeaths}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Increase in Deaths</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={state.deathIncrease}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t\tdecimalScale={2}\n\t\t\t\t\t\t\t\tsuffix={\"%\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>Peak Deaths</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\t\t\tvalue={state.peakDeaths}\n\t\t\t\t\t\t\t\tdisplayType={\"text\"}\n\t\t\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t\t({state.peakDeathsDate})\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</div>\n\t);\n};\n\nexport default StateTable;\n","import React, { useEffect, useState } from \"react\";\nimport StateTable from \"./StateTable\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst StatesList = ({ states }) => {\n\tconst [statesData, setStatesData] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst fips = states.map((s) => {\n\t\t\t\treturn s.fips;\n\t\t\t});\n\t\t\tconst result = await fetch(\"/api/states/fipssearch\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ fips: fips }),\n\t\t\t});\n\t\t\tconst body = await result.json();\n\t\t\tawait setStatesData(body);\n\t\t};\n\t\tfetchData();\n\t}, [states]);\n\n\treturn (\n\t\t<>\n\t\t\t<Container fluid=\"md\">\n\t\t\t\t{/* <Row>{items}</Row> */}\n\t\t\t\t<Row xs={1} md={3} lg={3}>\n\t\t\t\t\t{statesData.map((state, key) => (\n\t\t\t\t\t\t<Col sm key={key}>\n\t\t\t\t\t\t\t<StateTable state={state}></StateTable>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t))}\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default StatesList;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport StatesSearch from \"../components/StatesSearch\";\nimport StatesList from \"../components/StatesList\";\n\nconst StatesPage = (props) => {\n\t// Full results to be sent to typeahead\n\tconst [searchStates, setSearchStates] = useState([]);\n\n\t// Only a list of fips\n\tconst [selectedStates, setSelectedStates] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\t\tconst fetchData = async () => {\n\t\t\tconst result = await fetch(\"/api/user/states\", {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${props.auth.getAccessToken()}`,\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t});\n\t\t\tconst body = await result.json();\n\t\t\tsetSelectedStates(body[\"states\"] || []);\n\t\t};\n\t\tfetchData();\n\t\tsetIsLoading(false);\n\t}, [props.auth]);\n\n\tconst handleChange = async (selected) => {\n\t\tsetIsLoading(true);\n\t\tconst result = await fetch(\"/api/user/states\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${props.auth.getAccessToken()}`,\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({ states: selected }),\n\t\t});\n\t\tconst body = await result.json();\n\t\tsetSelectedStates(body[\"value\"][\"states\"] || []);\n\t\tsetIsLoading(false);\n\t};\n\n\tconst handleSearch = async (query) => {\n\t\tconst result = await fetch(\"/api/states/search\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${props.auth.getAccessToken()}`,\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify({ nameQuery: query }),\n\t\t});\n\t\tconst body = await result.json();\n\t\tsetSearchStates(body);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<StatesSearch\n\t\t\t\t\t\t\tname=\"State Search\"\n\t\t\t\t\t\t\tlabel=\"state\"\n\t\t\t\t\t\t\toptions={searchStates}\n\t\t\t\t\t\t\tdefaultOption=\"Search States\"\n\t\t\t\t\t\t\tselected={selectedStates}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonSearch={handleSearch}\n\t\t\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\t\t></StatesSearch>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<StatesList states={selectedStates}></StatesList>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default StatesPage;\n","import React from \"react\";\nconst AuthContext = new React.createContext();\nexport default AuthContext;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport AuthContext from \"./AuthContext\";\n\nconst PrivateRoute = ({ component: Component, scopes, ...rest }) => {\n\treturn (\n\t\t<AuthContext.Consumer>\n\t\t\t{(auth) => (\n\t\t\t\t<Route\n\t\t\t\t\t{...rest}\n\t\t\t\t\trender={(props) => {\n\t\t\t\t\t\t// 1. Redirect to login if not logged in.\n\t\t\t\t\t\tif (!auth.isAuthenticated()) return auth.login();\n\n\t\t\t\t\t\t// 2. Display message if user lacks required scope(s).\n\t\t\t\t\t\tif (scopes.length > 0 && !auth.userHasScopes(scopes)) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\tUnauthorized - You need the following scope(s) to view this\n\t\t\t\t\t\t\t\t\tpage: {scopes.join(\",\")}.\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// 3. Render component\n\t\t\t\t\t\treturn <Component auth={auth} {...props} />;\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</AuthContext.Consumer>\n\t);\n};\n\nPrivateRoute.propTypes = {\n\tcomponent: PropTypes.func.isRequired,\n\tscopes: PropTypes.array,\n};\n\nPrivateRoute.defaultProps = {\n\tscopes: [],\n};\n\nexport default PrivateRoute;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CountyTable from \"../components/CountyTable\";\nimport ReactbootStrapTable from \"react-bootstrap-table-next\";\nimport TableHelper from \"../utilities/TableHelpers\";\n\nconst CountyPage = ({ match }) => {\n\t// add useEffect to load county info with fips\n\n\tconst [county, setCounty] = useState({});\n\tconst [countyMetrics, setCountyMetrics] = useState([]);\n\tconst fips = match.params.fips;\n\tconsole.log(fips);\n\tconst columns = [\n\t\t{\n\t\t\tdataField: \"date\",\n\t\t\ttext: \"Date\",\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"cases\",\n\t\t\ttext: \"Cases\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"cases7dayma\",\n\t\t\ttext: \"7 Day average\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"cases30dayma\",\n\t\t\ttext: \"30 Day average\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\n\t\t{\n\t\t\tdataField: \"deaths\",\n\t\t\ttext: \"Deaths\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"deaths7dayma\",\n\t\t\ttext: \"7 Day average\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"deaths30dayma\",\n\t\t\ttext: \"30 Day average\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\t];\n\tconst defaultSorted = [\n\t\t{\n\t\t\tdataField: \"date\",\n\t\t\torder: \"desc\",\n\t\t},\n\t];\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst result = await fetch(\"/api/counties/fipssearch\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ fips: [fips] }),\n\t\t\t});\n\t\t\tconst body = await result.json();\n\t\t\tsetCounty(body[0]);\n\t\t\tsetCountyMetrics(body[0].metrics);\n\t\t};\n\t\tfetchData();\n\t}, [fips]);\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<CountyTable county={county}></CountyTable>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row height>\n\t\t\t\t<Col>\n\t\t\t\t\t<h4>Daily Metrics</h4>\n\t\t\t\t\t<ReactbootStrapTable\n\t\t\t\t\t\tkeyField=\"date\"\n\t\t\t\t\t\tdata={countyMetrics}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tdefaultSorted={defaultSorted}\n\t\t\t\t\t\tstriped\n\t\t\t\t\t\tcondensed\n\t\t\t\t\t\theight=\"120px\"\n\t\t\t\t\t\tscrollTop={\"Bottom\"}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default CountyPage;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport StateTable from \"../components/StateTable\";\nimport ReactbootStrapTable from \"react-bootstrap-table-next\";\nimport TableHelper from \"../utilities/TableHelpers\";\n\nconst StatePage = ({ match }) => {\n\tconst [state, setState] = useState({});\n\tconst [stateMetrics, setStateMetrics] = useState([]);\n\tconst fips = match.params.fips;\n\n\tconst columns = [\n\t\t{\n\t\t\tdataField: \"date\",\n\t\t\ttext: \"Date\",\n\t\t\ttype: \"date\",\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"cases\",\n\t\t\ttext: \"Cases\",\n\t\t\ttype: \"number\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"cases7dayma\",\n\t\t\ttext: \"7 Day average\",\n\t\t\ttype: \"number\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"cases30dayma\",\n\t\t\ttext: \"30 Day average\",\n\t\t\ttype: \"number\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\n\t\t{\n\t\t\tdataField: \"deaths\",\n\t\t\ttext: \"Deaths\",\n\t\t\ttype: \"number\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"deaths7dayma\",\n\t\t\ttext: \"7 Day average\",\n\t\t\ttype: \"number\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\t\t{\n\t\t\tdataField: \"deaths30dayma\",\n\t\t\ttext: \"30 Day average\",\n\t\t\ttype: \"number\",\n\t\t\tformatter: TableHelper.numberFormatter,\n\t\t\tsort: true,\n\t\t},\n\t];\n\tconst defaultSorted = [\n\t\t{\n\t\t\tdataField: \"date\",\n\t\t\torder: \"desc\",\n\t\t},\n\t];\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst result = await fetch(\"/api/states/fipssearch\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({ fips: [fips] }),\n\t\t\t});\n\t\t\tconst body = await result.json();\n\t\t\tsetState(body[0]);\n\t\t\tsetStateMetrics(body[0].metrics);\n\t\t};\n\t\tfetchData();\n\t}, [fips]);\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<StateTable state={state}></StateTable>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h4>Daily Metrics</h4>\n\t\t\t\t\t<ReactbootStrapTable\n\t\t\t\t\t\tkeyField=\"date\"\n\t\t\t\t\t\tdata={stateMetrics}\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tdefaultSorted={defaultSorted}\n\t\t\t\t\t\tstriped\n\t\t\t\t\t\tcondensed\n\t\t\t\t\t\theight=\"120px\"\n\t\t\t\t\t\tscrollTop={\"Bottom\"}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nexport default StatePage;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport NavigationBar from \"./NavBar\";\nimport \"./App.css\";\nimport CountiesPage from \"./pages/CountiesPage\";\nimport Auth from \"./Auth/Auth\";\nimport Callback from \"./pages/Callback\";\nimport StatesPage from \"./pages/StatesPage\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport AuthContext from \"./components/AuthContext\";\nimport CountyPage from \"./pages/CountyPage\";\nimport StatePage from \"./pages/StatePage\";\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tauth: new Auth(this.props.history),\n\t\t\ttokenRenewalComplete: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.state.auth.renewToken(() =>\n\t\t\tthis.setState({ tokenRenewalComplete: true })\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { auth } = this.state;\n\t\tif (!this.state.tokenRenewalComplete) return \"Loading...\";\n\t\treturn (\n\t\t\t<AuthContext.Provider value={auth}>\n\t\t\t\t<NavigationBar auth={auth} />\n\t\t\t\t<div id=\"page-body\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\trender={(props) => <HomePage auth={auth} {...props} />}\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tpath=\"/callback\"\n\t\t\t\t\t\t\trender={(props) => <Callback auth={auth} {...props} />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<PrivateRoute path=\"/counties\" component={CountiesPage} exact />\n\t\t\t\t\t\t<PrivateRoute path=\"/states\" component={StatesPage} exact />\n\t\t\t\t\t\t<PrivateRoute path=\"/county/:fips\" component={CountyPage} exact />\n\t\t\t\t\t\t<PrivateRoute path=\"/state/:fips\" component={StatePage} exact />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</AuthContext.Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"whatwg-fetch\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n//import \"./index.css\";\nimport App from \"./App\";\nimport \"jquery/dist/jquery.min\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<Route component={App} />\n\t\t</Router>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}